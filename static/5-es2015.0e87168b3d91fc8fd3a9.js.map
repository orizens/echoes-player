{"version":3,"sources":["webpack:///src/app/containers/user/index.ts","webpack:///src/app/containers/user/user.component.ts","webpack:///src/app/containers/user/user.component.ts.UserComponent.html","webpack:///src/app/containers/user/user-player.service.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts.PlaylistsComponent.html","webpack:///src/app/containers/user/user.guard.ts"],"names":["UserModule","appApi","store","playlists$","this","select","currentPlaylist$","isSignedIn$","signinUser","nowPlaylistService","userProfile","playlist","fetchPlaylistItems","id","subscribe","items","dispatch","updateIndexByMedia","media","PlaylistsComponent","userPlayerService","state","user","playlists","playSelectedPlaylist","queuePlaylist","AuthGuard","authorization","router","route","url","checkLogin","canActivate","isSignIn","navigate"],"mappings":"wKAmCO,MAAMA,G,gHCNN,MAAM,EAKX,YAAoBC,EAAuBC,GAAvB,KAAAD,SAAuB,KAAAC,QAJ3C,KAAAC,WAAaC,KAAKF,MAAMG,OAAO,KAC/B,KAAAC,iBAAmBF,KAAKF,MAAMG,OAAO,KACrC,KAAAE,YAAcH,KAAKF,MAAMG,OAAO,KAIhC,YAEA,aACED,KAAKH,OAAOO,c,+iBCjCZ,6FAAoD,8FAElD,sKACyB,UAAvB,c,0BADF,wBAEE,mGAA2B,4CAC3B,0GAAkC,W,wCAVxC,8EACE,oLAIA,gJAAG,kDAQH,oOAAe,uBAZf,QACE,4BACA,WAEF,SAAG,qDAA8B,eAQjC,WAAe,M,gTCNZ,MAAM,EACX,YACUC,EACAC,EACAR,GAFA,KAAAO,qBACA,KAAAC,cACA,KAAAR,QAGV,qBAAqBS,GACnBP,KAAKM,YACFE,mBAAmBD,EAASE,GAAI,IAChCC,UAAWC,IACVX,KAAKF,MAAMc,SAAS,IAAI,IAAwBD,IAChDX,KAAKK,mBAAmBQ,mBAAmBF,EAAM,GAAGF,IACpDT,KAAKF,MAAMc,SAAS,IAAI,IAAsBD,EAAM,OAI1D,cAAcJ,GACZP,KAAKM,YACFE,mBAAmBD,EAASE,GAAI,IAChCC,UAAWC,IACVX,KAAKF,MAAMc,SAAS,IAAI,IAAwBD,IACzCA,IAIb,WAAWG,GACTd,KAAKF,MAAMc,SAAS,IAAI,IAAuBE,IAGjD,UAAUA,GACRd,KAAKF,MAAMc,SAAS,IAAI,IAAsBE,IAC9Cd,KAAKF,MAAMc,SAAS,IAAI,IAAuBE,IAC/Cd,KAAKF,MAAMc,SAAS,IAAI,IAAwBE,KCpB7C,MAAMC,EAGX,YACUjB,EACAkB,GADA,KAAAlB,QACA,KAAAkB,oBAJV,KAAAjB,WAAaC,KAAKF,MAAMG,OAAOgB,GAASA,EAAMC,KAAKC,WAOnD,YAEA,qBAAqBZ,GACnBP,KAAKgB,kBAAkBI,qBAAqBb,GAG9C,sBAAsBA,GACpBP,KAAKgB,kBAAkBK,cAAcd,I,kGCjCnC,8IAK4C,UAD1C,a,uDACA,c,wDALF,sIAK4C,KAL5C,QAEE,EAAkB,kBAClB,YAAa,M,wCALnB,qGACE,6IACE,yKACE,mFADF,QACE,qDAA2C,sB,oVCE5C,MAAMe,EACX,YAAoBC,EAAsCC,GAAtC,KAAAD,gBAAsC,KAAAC,SAE1D,YAAYC,EAA+BR,GAEzC,MAAMS,EAAcT,EAAMS,IAC1B,OAAO1B,KAAK2B,WAAWD,GAGzB,iBAAiBD,EAA+BR,GAC9C,OAAOjB,KAAK4B,YAAYH,EAAOR,GAGjC,WAAWS,GACT,QAAI1B,KAAKuB,cAAcM,aAMvB7B,KAAKwB,OAAOM,SAAS,CAAC,WACf,I","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/index';\nimport { AppNavbarModule } from '../app-navbar';\n\nimport { PlaylistViewModule } from '../playlist-view'\n\nimport { UserComponent } from './user.component';\nimport { PlaylistsComponent } from './playlists';\n// import { PlaylistViewComponent, PlaylistResolver, PlaylistVideosResolver } from '@shared/components/playlist-view';\n\nimport { AuthGuard } from './user.guard';\nimport { UserPlayerService } from './user-player.service';\nimport { routing } from './user.routing';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AppNavbarModule,\n    PlaylistViewModule,\n    routing\n  ],\n  declarations: [\n    UserComponent,\n    PlaylistsComponent\n  ],\n  exports: [\n    UserComponent\n  ],\n  providers: [\n    AuthGuard,\n    UserPlayerService,\n    // PlaylistResolver,\n    // PlaylistVideosResolver\n  ]\n})\nexport class UserModule { }\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { EchoesState } from '@core/store';\n\nimport * as UserProfile from '@core/store/user-profile/user-profile.selectors';\nimport { AppApi } from '@api/app.api';\n\n@Component({\n  selector: 'app-user',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./user.scss'],\n  template: `\n  <article>\n    <app-navbar\n      [header]=\"'My Profile - My Playlists'\"\n      [headerIcon]=\"'heart-o'\"\n    ></app-navbar>\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\n      To view your playlists in youtube, you need to sign in.\n      <button class=\"btn btn-lg btn-transparent is-flex-row is-flex-valign\"\n        (click)=\"signInUser()\">\n        <span class=\"sign-in-text\">Sign In</span>\n        <div class=\"sign-in-with-youtube\"></div>\n      </button>\n    </p>\n    <router-outlet></router-outlet>\n  </article>\n  `\n})\nexport class UserComponent implements OnInit {\n  playlists$ = this.store.select(UserProfile.getUserPlaylists);\n  currentPlaylist$ = this.store.select(UserProfile.getUserViewPlaylist);\n  isSignedIn$ = this.store.select(UserProfile.getIsUserSignedIn);\n\n  constructor(private appApi: AppApi, public store: Store<EchoesState>) {}\n\n  ngOnInit() {}\n\n  signInUser() {\n    this.appApi.signinUser();\n  }\n}\n","\n  <article>\n    <app-navbar\n      [header]=\"'My Profile - My Playlists'\"\n      [headerIcon]=\"'heart-o'\"\n    ></app-navbar>\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\n      To view your playlists in youtube, you need to sign in.\n      <button class=\"btn btn-lg btn-transparent is-flex-row is-flex-valign\"\n        (click)=\"signInUser()\">\n        <span class=\"sign-in-text\">Sign In</span>\n        <div class=\"sign-in-with-youtube\"></div>\n      </button>\n    </p>\n    <router-outlet></router-outlet>\n  </article>\n  ","import { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { YoutubePlayerService, NowPlaylistService, UserProfile } from '@core/services';\nimport { EchoesState } from '@core/store';\nimport * as NowPlaylist from '@core/store/now-playlist';\nimport * as AppPlayer from '@core/store/app-player';\n\n@Injectable()\nexport class UserPlayerService {\n  constructor(\n    private nowPlaylistService: NowPlaylistService,\n    private userProfile: UserProfile,\n    private store: Store<EchoesState>\n  ) { }\n\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userProfile\n      .fetchPlaylistItems(playlist.id, '')\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\n        this.nowPlaylistService.updateIndexByMedia(items[0].id);\n        this.store.dispatch(new AppPlayer.LoadAndPlay(items[0]));\n      });\n  }\n\n  queuePlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userProfile\n      .fetchPlaylistItems(playlist.id, '')\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\n        return items;\n      });\n  }\n\n  queueVideo(media: GoogleApiYouTubeVideoResource) {\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\n  }\n\n  playVideo(media: GoogleApiYouTubeVideoResource) {\n    this.store.dispatch(new AppPlayer.LoadAndPlay(media));\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\n    this.store.dispatch(new NowPlaylist.SelectVideo(media));\n  }\n}\n","import { UserPlayerService } from '../user-player.service';\nimport { EchoesState } from '@core/store';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'playlists',\n  template: `\n  <section class=\"videos-list\">\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\n      <youtube-playlist\n        *ngFor=\"let playlist of playlists$ | async\"\n        [media]=\"playlist\"\n        link=\"/user/\"\n        (play)=\"playSelectedPlaylist(playlist)\"\n        (queue)=\"queueSelectedPlaylist(playlist)\">\n      </youtube-playlist>\n    </div>\n  </section>\n  `\n})\nexport class PlaylistsComponent implements OnInit {\n  playlists$ = this.store.select(state => state.user.playlists);\n\n  constructor(\n    private store: Store<EchoesState>,\n    private userPlayerService: UserPlayerService\n  ) { }\n\n  ngOnInit() { }\n\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userPlayerService.playSelectedPlaylist(playlist);\n  }\n\n  queueSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\n    this.userPlayerService.queuePlaylist(playlist);\n  }\n}\n","\n  <section class=\"videos-list\">\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\n      <youtube-playlist\n        *ngFor=\"let playlist of playlists$ | async\"\n        [media]=\"playlist\"\n        link=\"/user/\"\n        (play)=\"playSelectedPlaylist(playlist)\"\n        (queue)=\"queueSelectedPlaylist(playlist)\">\n      </youtube-playlist>\n    </div>\n  </section>\n  ","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Authorization } from '@core/services';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n  constructor(private authorization: Authorization, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // console.log('AuthGuard#canActivate called', { state });\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.canActivate(route, state);\n  }\n\n  checkLogin(url: string): boolean {\n    if (this.authorization.isSignIn()) { return true; }\n\n    // Store the attempted URL for redirecting\n    // this.authService.redirectUrl = url;\n\n    // Navigate to the login page with extras\n    this.router.navigate(['/user']);\n    return false;\n  }\n}\n"]}